
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role',
  avatar: 'avatar',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  company: 'company',
  address: 'address',
  city: 'city',
  country: 'country',
  industry: 'industry',
  size: 'size',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ServicePlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  type: 'type',
  status: 'status',
  price: 'price',
  currency: 'currency',
  duration: 'duration',
  features: 'features',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  customerId: 'customerId'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type',
  priority: 'priority',
  status: 'status',
  dueDate: 'dueDate',
  completedAt: 'completedAt',
  estimatedHours: 'estimatedHours',
  actualHours: 'actualHours',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  customerId: 'customerId',
  servicePlanId: 'servicePlanId',
  createdById: 'createdById',
  updatedById: 'updatedById'
};

exports.Prisma.TaskAssignmentScalarFieldEnum = {
  id: 'id',
  assignedAt: 'assignedAt',
  status: 'status',
  notes: 'notes',
  taskId: 'taskId',
  userId: 'userId'
};

exports.Prisma.CommunicationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  subject: 'subject',
  content: 'content',
  direction: 'direction',
  createdAt: 'createdAt',
  customerId: 'customerId'
};

exports.Prisma.SettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  type: 'type',
  description: 'description'
};

exports.Prisma.PartnerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  country: 'country',
  city: 'city',
  address: 'address',
  latitude: 'latitude',
  longitude: 'longitude',
  domain: 'domain',
  role: 'role',
  specialties: 'specialties',
  rating: 'rating',
  activeEngagements: 'activeEngagements',
  availability: 'availability',
  remoteOk: 'remoteOk',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyProfileScalarFieldEnum = {
  id: 'id',
  name: 'name',
  brand: 'brand',
  legalName: 'legalName',
  email: 'email',
  phone: 'phone',
  address: 'address',
  city: 'city',
  country: 'country',
  logoUrl: 'logoUrl',
  signerName: 'signerName',
  signerTitle: 'signerTitle',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContractTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  language: 'language',
  industry: 'industry',
  brand: 'brand',
  defaultContent: 'defaultContent',
  variables: 'variables',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContractScalarFieldEnum = {
  id: 'id',
  type: 'type',
  status: 'status',
  language: 'language',
  industry: 'industry',
  variables: 'variables',
  generatedContent: 'generatedContent',
  pdfPath: 'pdfPath',
  aiProvider: 'aiProvider',
  sentAt: 'sentAt',
  signedAt: 'signedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  templateId: 'templateId',
  senderCompanyId: 'senderCompanyId',
  customerId: 'customerId',
  recipientEmail: 'recipientEmail',
  recipientName: 'recipientName',
  createdById: 'createdById'
};

exports.Prisma.PlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  customerId: 'customerId',
  industry: 'industry',
  companySize: 'companySize',
  durationType: 'durationType',
  durationWeeks: 'durationWeeks',
  startDate: 'startDate',
  workingDays: 'workingDays',
  address: 'address',
  siteType: 'siteType',
  accessRequirements: 'accessRequirements',
  status: 'status',
  currentStage: 'currentStage',
  totalStages: 'totalStages',
  totalBudget: 'totalBudget',
  currency: 'currency',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MilestoneScalarFieldEnum = {
  id: 'id',
  planId: 'planId',
  sequence: 'sequence',
  name: 'name',
  description: 'description',
  durationWeeks: 'durationWeeks',
  budgetAllocation: 'budgetAllocation',
  deliverables: 'deliverables',
  dependencies: 'dependencies',
  isCriticalPath: 'isCriticalPath',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ResourceScalarFieldEnum = {
  id: 'id',
  planId: 'planId',
  name: 'name',
  type: 'type',
  quantity: 'quantity',
  cost: 'cost',
  currency: 'currency',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AttachmentScalarFieldEnum = {
  id: 'id',
  planId: 'planId',
  name: 'name',
  type: 'type',
  size: 'size',
  url: 'url',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  AGENT: 'AGENT',
  VIEWER: 'VIEWER'
};

exports.CompanySize = exports.$Enums.CompanySize = {
  STARTUP: 'STARTUP',
  SMALL: 'SMALL',
  MEDIUM: 'MEDIUM',
  LARGE: 'LARGE',
  ENTERPRISE: 'ENTERPRISE'
};

exports.CustomerStatus = exports.$Enums.CustomerStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  PROSPECT: 'PROSPECT'
};

exports.ServiceType = exports.$Enums.ServiceType = {
  BASIC_CFO: 'BASIC_CFO',
  PREMIUM_CFO: 'PREMIUM_CFO',
  ENTERPRISE_CFO: 'ENTERPRISE_CFO',
  CONSULTING: 'CONSULTING',
  AUDIT: 'AUDIT',
  TAX_FILING: 'TAX_FILING',
  CUSTOM: 'CUSTOM'
};

exports.ServiceStatus = exports.$Enums.ServiceStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  COMPLETED: 'COMPLETED'
};

exports.TaskType = exports.$Enums.TaskType = {
  FINANCIAL_REVIEW: 'FINANCIAL_REVIEW',
  TAX_PREPARATION: 'TAX_PREPARATION',
  BUDGET_PLANNING: 'BUDGET_PLANNING',
  AUDIT_SUPPORT: 'AUDIT_SUPPORT',
  COMPLIANCE_CHECK: 'COMPLIANCE_CHECK',
  REPORTING: 'REPORTING',
  CONSULTATION: 'CONSULTATION',
  OTHER: 'OTHER'
};

exports.Priority = exports.$Enums.Priority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.TaskStatus = exports.$Enums.TaskStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  ON_HOLD: 'ON_HOLD'
};

exports.AssignmentStatus = exports.$Enums.AssignmentStatus = {
  ASSIGNED: 'ASSIGNED',
  ACCEPTED: 'ACCEPTED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  REJECTED: 'REJECTED'
};

exports.CommunicationType = exports.$Enums.CommunicationType = {
  EMAIL: 'EMAIL',
  PHONE: 'PHONE',
  MEETING: 'MEETING',
  CHAT: 'CHAT',
  DOCUMENT: 'DOCUMENT',
  OTHER: 'OTHER'
};

exports.CommunicationDirection = exports.$Enums.CommunicationDirection = {
  INBOUND: 'INBOUND',
  OUTBOUND: 'OUTBOUND'
};

exports.SettingType = exports.$Enums.SettingType = {
  STRING: 'STRING',
  NUMBER: 'NUMBER',
  BOOLEAN: 'BOOLEAN',
  JSON: 'JSON'
};

exports.PartnerRole = exports.$Enums.PartnerRole = {
  ERP_CONSULTANT: 'ERP_CONSULTANT',
  TECHNICAL: 'TECHNICAL',
  ACCOUNTS: 'ACCOUNTS',
  STOCK_COUNT: 'STOCK_COUNT',
  IMPLEMENTATION: 'IMPLEMENTATION',
  TRAINING: 'TRAINING',
  OTHER: 'OTHER'
};

exports.PartnerAvailability = exports.$Enums.PartnerAvailability = {
  AVAILABLE: 'AVAILABLE',
  MODERATE: 'MODERATE',
  BUSY: 'BUSY',
  UNAVAILABLE: 'UNAVAILABLE'
};

exports.ContractType = exports.$Enums.ContractType = {
  SERVICE_AGREEMENT: 'SERVICE_AGREEMENT',
  NDA: 'NDA',
  MSA: 'MSA',
  SOW: 'SOW',
  PROPOSAL: 'PROPOSAL',
  CUSTOM: 'CUSTOM'
};

exports.ContractStatus = exports.$Enums.ContractStatus = {
  DRAFT: 'DRAFT',
  GENERATED: 'GENERATED',
  SENT: 'SENT',
  VIEWED: 'VIEWED',
  SIGNED: 'SIGNED',
  FAILED: 'FAILED'
};

exports.Brand = exports.$Enums.Brand = {
  GREENLINES: 'GREENLINES',
  GLERP: 'GLERP',
  OTHER: 'OTHER'
};

exports.AIProvider = exports.$Enums.AIProvider = {
  OPENAI: 'OPENAI',
  GEMINI: 'GEMINI',
  ANTHROPIC: 'ANTHROPIC',
  CUSTOM: 'CUSTOM'
};

exports.PlanStatus = exports.$Enums.PlanStatus = {
  DRAFT: 'DRAFT',
  ACTIVE: 'ACTIVE',
  ON_HOLD: 'ON_HOLD',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.ResourceType = exports.$Enums.ResourceType = {
  HUMAN_RESOURCE: 'HUMAN_RESOURCE',
  EQUIPMENT: 'EQUIPMENT',
  SOFTWARE: 'SOFTWARE',
  MATERIAL: 'MATERIAL',
  OTHER: 'OTHER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Customer: 'Customer',
  ServicePlan: 'ServicePlan',
  Task: 'Task',
  TaskAssignment: 'TaskAssignment',
  Communication: 'Communication',
  Setting: 'Setting',
  Partner: 'Partner',
  CompanyProfile: 'CompanyProfile',
  ContractTemplate: 'ContractTemplate',
  Contract: 'Contract',
  Plan: 'Plan',
  Milestone: 'Milestone',
  Resource: 'Resource',
  Attachment: 'Attachment'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\maluk\\Documents\\cfo_docs\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\maluk\\Documents\\cfo_docs\\apps\\hq-console\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../apps/hq-console/.env"
  },
  "relativePath": "../../../apps/hq-console/prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// User Management\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  name      String?\n  password  String\n  role      UserRole @default(ADMIN)\n  avatar    String?\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  assignedTasks TaskAssignment[]\n  createdTasks  Task[]           @relation(\"TaskCreator\")\n  updatedTasks  Task[]           @relation(\"TaskUpdater\")\n\n  // Contract relations\n  createdContracts Contract[]\n\n  @@map(\"users\")\n}\n\nenum UserRole {\n  ADMIN\n  MANAGER\n  AGENT\n  VIEWER\n}\n\n// Customer Management\nmodel Customer {\n  id        String         @id @default(cuid())\n  name      String\n  email     String         @unique\n  phone     String?\n  company   String?\n  address   String?\n  city      String?\n  country   String         @default(\"UAE\")\n  industry  String?\n  size      CompanySize?\n  status    CustomerStatus @default(ACTIVE)\n  notes     String?\n  createdAt DateTime       @default(now())\n  updatedAt DateTime       @updatedAt\n\n  // Relations\n  servicePlans   ServicePlan[]\n  tasks          Task[]\n  communications Communication[]\n\n  // Contract relations\n  contracts Contract[]\n\n  // Plan Builder relations\n  plans Plan[]\n\n  @@map(\"customers\")\n}\n\nenum CompanySize {\n  STARTUP\n  SMALL\n  MEDIUM\n  LARGE\n  ENTERPRISE\n}\n\nenum CustomerStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n  PROSPECT\n}\n\n// Service Plans\nmodel ServicePlan {\n  id          String        @id @default(cuid())\n  name        String\n  description String?\n  type        ServiceType\n  status      ServiceStatus @default(ACTIVE)\n  price       Decimal?\n  currency    String        @default(\"AED\")\n  duration    Int? // in months\n  features    Json? // Store plan features as JSON\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n\n  // Relations\n  customerId String\n  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  tasks      Task[]\n\n  @@map(\"service_plans\")\n}\n\nenum ServiceType {\n  BASIC_CFO\n  PREMIUM_CFO\n  ENTERPRISE_CFO\n  CONSULTING\n  AUDIT\n  TAX_FILING\n  CUSTOM\n}\n\nenum ServiceStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n  COMPLETED\n}\n\n// Task Management\nmodel Task {\n  id             String     @id @default(cuid())\n  title          String\n  description    String?\n  type           TaskType\n  priority       Priority   @default(MEDIUM)\n  status         TaskStatus @default(PENDING)\n  dueDate        DateTime?\n  completedAt    DateTime?\n  estimatedHours Int?\n  actualHours    Int?\n  createdAt      DateTime   @default(now())\n  updatedAt      DateTime   @updatedAt\n\n  // Relations\n  customerId    String\n  customer      Customer         @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  servicePlanId String?\n  servicePlan   ServicePlan?     @relation(fields: [servicePlanId], references: [id])\n  createdById   String\n  createdBy     User             @relation(\"TaskCreator\", fields: [createdById], references: [id])\n  updatedById   String?\n  updatedBy     User?            @relation(\"TaskUpdater\", fields: [updatedById], references: [id])\n  assignments   TaskAssignment[]\n\n  @@map(\"tasks\")\n}\n\nenum TaskType {\n  FINANCIAL_REVIEW\n  TAX_PREPARATION\n  BUDGET_PLANNING\n  AUDIT_SUPPORT\n  COMPLIANCE_CHECK\n  REPORTING\n  CONSULTATION\n  OTHER\n}\n\nenum Priority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum TaskStatus {\n  PENDING\n  IN_PROGRESS\n  COMPLETED\n  CANCELLED\n  ON_HOLD\n}\n\n// Task Assignments\nmodel TaskAssignment {\n  id         String           @id @default(cuid())\n  assignedAt DateTime         @default(now())\n  status     AssignmentStatus @default(ASSIGNED)\n  notes      String?\n\n  // Relations\n  taskId String\n  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([taskId, userId])\n  @@map(\"task_assignments\")\n}\n\nenum AssignmentStatus {\n  ASSIGNED\n  ACCEPTED\n  IN_PROGRESS\n  COMPLETED\n  REJECTED\n}\n\n// Communication Log\nmodel Communication {\n  id        String                 @id @default(cuid())\n  type      CommunicationType\n  subject   String?\n  content   String\n  direction CommunicationDirection\n  createdAt DateTime               @default(now())\n\n  // Relations\n  customerId String\n  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)\n\n  @@map(\"communications\")\n}\n\nenum CommunicationType {\n  EMAIL\n  PHONE\n  MEETING\n  CHAT\n  DOCUMENT\n  OTHER\n}\n\nenum CommunicationDirection {\n  INBOUND\n  OUTBOUND\n}\n\n// System Settings\nmodel Setting {\n  id          String      @id @default(cuid())\n  key         String      @unique\n  value       String\n  type        SettingType @default(STRING)\n  description String?\n\n  @@map(\"settings\")\n}\n\nenum SettingType {\n  STRING\n  NUMBER\n  BOOLEAN\n  JSON\n}\n\n// Partner Management\nmodel Partner {\n  id                String              @id @default(cuid())\n  name              String\n  email             String?\n  phone             String?\n  country           String\n  city              String? // City for same-city matching\n  address           String? // Full address\n  latitude          Float? // For distance calculation\n  longitude         Float? // For distance calculation\n  domain            String // Area of expertise e.g., Odoo, Stock Count\n  role              PartnerRole // Functional role e.g., Technical, Accounts, ERP Consultant\n  specialties       Json? // Array of service specialties e.g., [\"Network Infrastructure\", \"Security Systems\"]\n  rating            Float?              @default(0) // 0-5 star rating\n  activeEngagements Int                 @default(0) // Current workload\n  availability      PartnerAvailability @default(AVAILABLE)\n  remoteOk          Boolean             @default(false) // Can work remotely\n  notes             String?\n  createdAt         DateTime            @default(now())\n  updatedAt         DateTime            @updatedAt\n\n  @@index([country])\n  @@index([city])\n  @@index([domain])\n  @@index([role])\n  @@index([latitude, longitude])\n  @@map(\"partners\")\n}\n\nenum PartnerRole {\n  ERP_CONSULTANT\n  TECHNICAL\n  ACCOUNTS\n  STOCK_COUNT\n  IMPLEMENTATION\n  TRAINING\n  OTHER\n}\n\nenum PartnerAvailability {\n  AVAILABLE // Within 24 hours\n  MODERATE // Within 48 hours\n  BUSY // Within 72 hours\n  UNAVAILABLE // Not available\n}\n\n// Contracts & Templates\n\nenum ContractType {\n  SERVICE_AGREEMENT\n  NDA\n  MSA\n  SOW\n  PROPOSAL\n  CUSTOM\n}\n\nenum ContractStatus {\n  DRAFT\n  GENERATED\n  SENT\n  VIEWED\n  SIGNED\n  FAILED\n}\n\nenum Brand {\n  GREENLINES\n  GLERP\n  OTHER\n}\n\nenum AIProvider {\n  OPENAI\n  GEMINI\n  ANTHROPIC\n  CUSTOM\n}\n\nmodel CompanyProfile {\n  id          String   @id @default(cuid())\n  name        String // Display name e.g., Green Lines, GLERP\n  brand       Brand\n  legalName   String\n  email       String\n  phone       String?\n  address     String?\n  city        String?\n  country     String?\n  logoUrl     String?\n  signerName  String?\n  signerTitle String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  contracts Contract[]\n\n  @@map(\"company_profiles\")\n}\n\nmodel ContractTemplate {\n  id             String       @id @default(cuid())\n  name           String\n  type           ContractType\n  language       String       @default(\"en\") // en or ar; UI will control RTL/LTR\n  industry       String?\n  brand          Brand?\n  defaultContent String // Template text with placeholders like {{companyName}}\n  variables      Json? // e.g., [\"companyName\",\"price\",\"currency\",\"termMonths\"]\n  isActive       Boolean      @default(true)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  // Relations\n  contracts Contract[]\n\n  @@map(\"contract_templates\")\n}\n\nmodel Contract {\n  id               String         @id @default(cuid())\n  type             ContractType\n  status           ContractStatus @default(DRAFT)\n  language         String         @default(\"en\")\n  industry         String?\n  variables        Json? // Resolved variables for this instance\n  generatedContent String? // Raw generated text (optional)\n  pdfPath          String? // Stored PDF path/key\n  aiProvider       AIProvider? // Which AI was used to generate\n  sentAt           DateTime?\n  signedAt         DateTime?\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  // Relations\n  templateId String?\n  template   ContractTemplate? @relation(fields: [templateId], references: [id])\n\n  senderCompanyId String\n  senderCompany   CompanyProfile @relation(fields: [senderCompanyId], references: [id])\n\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id])\n\n  recipientEmail String\n  recipientName  String?\n  createdById    String\n  createdBy      User    @relation(fields: [createdById], references: [id])\n\n  @@index([type])\n  @@index([status])\n  @@index([senderCompanyId])\n  @@index([customerId])\n  @@map(\"contracts\")\n}\n\n// Plan Builder - Service Plans\nmodel Plan {\n  id          String   @id @default(cuid())\n  name        String\n  description String?\n  customerId  String\n  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)\n\n  // Basic Information (Stage 1)\n  industry           String\n  companySize        String\n  durationType       String    @default(\"WEEKS\")\n  durationWeeks      Int?\n  startDate          DateTime?\n  workingDays        Int       @default(5)\n  address            String?\n  siteType           String?\n  accessRequirements String?\n\n  // Plan Status\n  status       PlanStatus @default(DRAFT)\n  currentStage Int        @default(1)\n  totalStages  Int        @default(7)\n  totalBudget  Decimal    @default(0)\n  currency     String     @default(\"SAR\")\n  notes        String?\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  milestones  Milestone[]\n  resources   Resource[]\n  attachments Attachment[]\n\n  @@map(\"plans\")\n}\n\nenum PlanStatus {\n  DRAFT\n  ACTIVE\n  ON_HOLD\n  COMPLETED\n  CANCELLED\n}\n\n// Plan Milestones (Stage 2)\nmodel Milestone {\n  id     String @id @default(cuid())\n  planId String\n  plan   Plan   @relation(fields: [planId], references: [id], onDelete: Cascade)\n\n  sequence         Int\n  name             String\n  description      String?\n  durationWeeks    Int\n  budgetAllocation Decimal // Percentage (0-100)\n  deliverables     String?\n  dependencies     String? // JSON array of milestone IDs\n  isCriticalPath   Boolean @default(false)\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"milestones\")\n}\n\n// Plan Resources (Stage 3)\nmodel Resource {\n  id     String @id @default(cuid())\n  planId String\n  plan   Plan   @relation(fields: [planId], references: [id], onDelete: Cascade)\n\n  name        String\n  type        ResourceType\n  quantity    Int          @default(1)\n  cost        Decimal?\n  currency    String       @default(\"SAR\")\n  description String?\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"resources\")\n}\n\nenum ResourceType {\n  HUMAN_RESOURCE\n  EQUIPMENT\n  SOFTWARE\n  MATERIAL\n  OTHER\n}\n\n// Plan Attachments (Stage 6)\nmodel Attachment {\n  id     String @id @default(cuid())\n  planId String\n  plan   Plan   @relation(fields: [planId], references: [id], onDelete: Cascade)\n\n  name        String\n  type        String\n  size        Int\n  url         String\n  description String?\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"attachments\")\n}\n",
  "inlineSchemaHash": "97c11adbdf8c3193c0255ada773cafd2b89640f9058b556019c748db4b015a66",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedTasks\",\"kind\":\"object\",\"type\":\"TaskAssignment\",\"relationName\":\"TaskAssignmentToUser\"},{\"name\":\"createdTasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"TaskCreator\"},{\"name\":\"updatedTasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"TaskUpdater\"},{\"name\":\"createdContracts\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"ContractToUser\"}],\"dbName\":\"users\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"enum\",\"type\":\"CompanySize\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CustomerStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"servicePlans\",\"kind\":\"object\",\"type\":\"ServicePlan\",\"relationName\":\"CustomerToServicePlan\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"CustomerToTask\"},{\"name\":\"communications\",\"kind\":\"object\",\"type\":\"Communication\",\"relationName\":\"CommunicationToCustomer\"},{\"name\":\"contracts\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"ContractToCustomer\"},{\"name\":\"plans\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"CustomerToPlan\"}],\"dbName\":\"customers\"},\"ServicePlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ServiceType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceStatus\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToServicePlan\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"ServicePlanToTask\"}],\"dbName\":\"service_plans\"},\"Task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TaskType\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TaskStatus\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estimatedHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actualHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToTask\"},{\"name\":\"servicePlanId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"servicePlan\",\"kind\":\"object\",\"type\":\"ServicePlan\",\"relationName\":\"ServicePlanToTask\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TaskCreator\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TaskUpdater\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"TaskAssignment\",\"relationName\":\"TaskToTaskAssignment\"}],\"dbName\":\"tasks\"},\"TaskAssignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AssignmentStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taskId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"task\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"TaskToTaskAssignment\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TaskAssignmentToUser\"}],\"dbName\":\"task_assignments\"},\"Communication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CommunicationType\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direction\",\"kind\":\"enum\",\"type\":\"CommunicationDirection\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CommunicationToCustomer\"}],\"dbName\":\"communications\"},\"Setting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"SettingType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"settings\"},\"Partner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"PartnerRole\"},{\"name\":\"specialties\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"activeEngagements\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"availability\",\"kind\":\"enum\",\"type\":\"PartnerAvailability\"},{\"name\":\"remoteOk\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"partners\"},\"CompanyProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"enum\",\"type\":\"Brand\"},{\"name\":\"legalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signerTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contracts\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"CompanyProfileToContract\"}],\"dbName\":\"company_profiles\"},\"ContractTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ContractType\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"enum\",\"type\":\"Brand\"},{\"name\":\"defaultContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variables\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contracts\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"ContractToContractTemplate\"}],\"dbName\":\"contract_templates\"},\"Contract\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ContractType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ContractStatus\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variables\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"generatedContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pdfPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiProvider\",\"kind\":\"enum\",\"type\":\"AIProvider\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"signedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"template\",\"kind\":\"object\",\"type\":\"ContractTemplate\",\"relationName\":\"ContractToContractTemplate\"},{\"name\":\"senderCompanyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderCompany\",\"kind\":\"object\",\"type\":\"CompanyProfile\",\"relationName\":\"CompanyProfileToContract\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"ContractToCustomer\"},{\"name\":\"recipientEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ContractToUser\"}],\"dbName\":\"contracts\"},\"Plan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToPlan\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companySize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationWeeks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workingDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessRequirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PlanStatus\"},{\"name\":\"currentStage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalStages\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalBudget\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"milestones\",\"kind\":\"object\",\"type\":\"Milestone\",\"relationName\":\"MilestoneToPlan\"},{\"name\":\"resources\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"PlanToResource\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToPlan\"}],\"dbName\":\"plans\"},\"Milestone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"MilestoneToPlan\"},{\"name\":\"sequence\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationWeeks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"budgetAllocation\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deliverables\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dependencies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCriticalPath\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"milestones\"},\"Resource\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"PlanToResource\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ResourceType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"resources\"},\"Attachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"AttachmentToPlan\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"attachments\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

